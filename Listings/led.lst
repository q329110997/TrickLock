C51 COMPILER V9.60.0.0   LED                                                               06/30/2019 20:42:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE src\led\led.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          #include "../universal/type.h"
   3          #include "../universal/delay.h"
   4          
   5          #include <reg52.h>
   6          #include <intrins.h>
   7          
   8          sbit my_sclk = P3^6;  // 移位寄存器时钟信号
   9          sbit my_clk = P3^5;   // 存储寄存器时钟信号
  10          sbit my_ser = P3^4;    // 串行输入口
  11          
  12          // LED 锁状态 段数据
  13          code uint8 led_lock_seg[] = {0x00, 0x0E, 0x3E, 0x4E, 0x4E, 0x3E, 0x0E, 0x00};
  14          // LED 解锁状态 段数据
  15          code uint8 led_unlock_seg[] = {0x00, 0x0E, 0x6E, 0x8E, 0x8E, 0x7E, 0x0E, 0x00};
  16          // LED 位数据
  17          code uint8 led_bit[] = {0x7F, 0xBF, 0xDF, 0xEF, 0xF7, 0xFB, 0xFD, 0xFE};
  18          
  19          // @func 向 HC595 发送一字节信息, 控制 LED 点阵
  20          static void SendByte4Hc595(uint8 dat) {
  21   1        uint8 a;
  22   1        my_sclk = 0;
  23   1        my_clk = 0;
  24   1        for (a = 0; a < 8; ++a) {
  25   2          my_ser = dat >> 7;
  26   2          dat <<= 1;
  27   2          my_sclk = 1;
  28   2          _nop_();
  29   2          _nop_();
  30   2          my_sclk = 0;
  31   2        }
  32   1        my_clk = 1;
  33   1        _nop_();
  34   1        _nop_();
  35   1        my_clk = 0;
  36   1      }
  37          
  38          void Lock4Led(void) {
  39   1        uint8 i;
  40   1        Infor* infor = generator_infor();
  41   1        infor->set_sts(LOCK);
  42   1        P0 = 0x7F;
  43   1        for (i = 0; i < 8; ++i) {
  44   2          P0 = led_bit[i];
  45   2          SendByte4Hc595(led_lock_seg[i]);
  46   2          Delay1Ms(1);
  47   2          SendByte4Hc595(0x00);
  48   2        }
  49   1        P0 = 0x00;
  50   1      }
  51          
  52          void Unlock4Led(void) {
  53   1        uint8 i;
  54   1        Infor* infor = generator_infor();
C51 COMPILER V9.60.0.0   LED                                                               06/30/2019 20:42:09 PAGE 2   

  55   1        infor->set_sts(UNLOCK);
  56   1        P0 = 0x7F;
  57   1        for (i = 0; i < 8; ++i) {
  58   2          P0 = led_bit[i];
  59   2          SendByte4Hc595(led_unlock_seg[i]);
  60   2          Delay1Ms(1);
  61   2          SendByte4Hc595(0x00);
  62   2        }
  63   1        P0 = 0x00;
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
